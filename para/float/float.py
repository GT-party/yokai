import math 
def one1():
    print("Найти сумму членов арифметической прогрессии a, a+d,…a+(n-1)d по данным значениям a,d,n.")
    a=int(input("Введите начальное число: "))
    d=int(input("Введите число d: "))
    n=int(input("Введите коэфицент: "))
    count=0 #Счетчик
    for i in range(n): #Цикл для нахождения суммы членов ариф. прогрессии
        count+=a+i*d
    print(count) #Вывод числа


def one2():
    print("Даны действительные положительные числа a, b, c. По трем сторонам с длинами a, b, с можно построить треугольник. Найти углы треугольника.")
    a=int(input("Введить сторону а: "))
    b=int(input("Введить сторону b: "))
    c=int(input("Введить сторону c: "))
    print("Угол a=",math.degrees(math.cos((a**2+c**2-b**2)/2*a*c))) #Нахождение стороны "a"
    print("Угол b=",math.cos((a**2+b**2-c**2)/2*a*b)) #Нахождение стороны "b"
    print("Угол c=",math.cos((c**2+c**2-b**2)/2*b*c)) #Нахождение стороны "c"


def one3():
    print("Определите число, полученное выписыванием в обратном порядке цифр заданного целого трехзначного числа x.")
    a=str(input("Впиши число: "))
    c=""
    c+=a[::-1] #Вывод числа наоборот
    print(c)

def one4():
    print("Дано натуральное число n, состоящее из шести цифр. Определите число сотен и тысяч в нем.")
    a=int(input("Введите число: ")) 
    if a>=100000: 
        print((a//1000)%10,"-число тысяч") #Вывод числа тысяч
        print((a//100)%10,"-число сотен") #Вывод числа сотен
    else:
        print("Слишком маленькое число") #Вывод если слишком маленькое число

def one5():
    print("Дано значение угла в градусах. Определите смежный к нему угол в радианах.")
    a=int(input("Введить градусы угла: "))
    print("Смежный угол:",math.radians(180-a)) #Вывод смежного угла

def one6():
    print("Для произвольных чисел a, b, c определите, имеет ли уравнение ax2 + bx + c = 0 хотя бы одно вещественное решение.")
    a=int(input("Введить число а: ")) 
    b=int(input("Введить число b: "))
    c=int(input("Введить число c: "))
    d=0
    e=0
    if b**2-4*a*(-c)<0: 
        print("Нет корней")
        return
    else:
        D=b**2-4*a*(-c) #Вычисление дискриминанта
        for i in range(2):
            d=(-d-math.sqrt(D)/2*a) #Вычисление первого корня
            e=(-d+math.sqrt(D)/2*a) #Вычисление второго корня
            if a*(d**2)+b*d+c==0 or a*(e**2)+e*d+c==0:
                print("Может быть корень: ",d)
            else:
                print(math.sqrt(b**2-4*a*(-c))/2*a,-(b))


def one7():
    print("Даны три положительных числа a, b, c. Определите, можно ли построить треугольник с такими длинами сторон.")
    a,b,c=int(input("Введите первую сторону: ")),int(input("Введите вторую сторону: ")),int(input("Введите третью сторону: "))
    if a+b>=c and a+c>=b and b+c>=a: #Проверка, существует ли такой треугольник
        print("Может")
    else: #Запуск если утверждение ложно
        print("Не может")

def one8():
    print("Определите, есть ли среди цифр некоторого трехзначного числа повторяющиеся.")
    a=int(input("Введите трехзначное число: "))
    if a<1000 and a>99:
        if a%10==a//100 or a%10==(a//10)%10 or a//100==(a//10)%10: #Поиск одинаковых чисел
            print("В числе есть повторяющиеся цифры")
        else:
            print("Повторяющихся цифр нет")
    else: #Вывод если число слишком большое или маленькое
        if a>1000:
            print("Слишком большое число")
        else:
            print("Слишком маленькое число")


def one9():
    print("Определите, равна ли сумма крайних цифр некоторого четырехзначного числа сумме его средних цифр.")
    a=int(input("Введите четырехзначное число: "))
    if (a//1000)+a%10==(a//100)%10+(a//10)%10: # Верно ли что сумма 1 и 4 цифры равна сумме 2 и 3
        print("Сумма цифр равна") #Если утверждение верно
    else:
        print("Сумма цифр не равна") #Если утверждение ложно

def two1():
    print("Дана длина ребра куба. Найти объем куба и площадь его боковой поверхности.")
    a=int(input("Введите длину ребра куба: "))
    print("Объем куба =",a**3) #Вывод объема куба
    print("площадь его боковой поверхности равна", (a*a)*6) #Вывод величины боковой поверхности

def two2():
    print("Даны длины сторон трапеции. Найти периметр трапеции.")
    a=int(input("ВВедите длину стороны a: "))
    b=int(input("ВВедите длину стороны b: "))
    c=int(input("ВВедите длину стороны c: "))
    d=int(input("ВВедите длину стороны d: "))
    print(a+b+c+d,"периметр трапиеции") #Нахождение периметра трапеции


def two3():
    print("Даны катеты прямоугольного треугольника. Найти его гипотенузу и площадь.")
    a=int(input("Введиие первый катет: "))
    b=int(input("Введиие второй катет: "))
    print("Гипотенуза равна: ",math.sqrt(a**2+b**2)) #Вывод гипотенузы
    print("Площадь треугольника: ", 0.5*a*b) #Вывод площади треугольника


def two4():
    print("Определить периметр правильного n-угольника, описанного около окружности радиуса R.")
    r=int(input("Введите радиус: "))
    n=int(input("Введите кол-во углов: "))
    print(2*r*n*math.sin(math.pi/n)*math.cos(math.pi/n) ) #Периметр правильного n-угольника


def two5():
    print("Дана сторона равностороннего треугольника. Найти площадь этого треугольника.")
    a=int(input("Введите длину стороны: "))
    h=math.sqrt(a**2-((0.5*a)**2)) #Нахождение высоты треугольника
    print("Площадь треугольника равна ", 0.5*a*h) #Вывод площади


def two6():
    print("Даны гипотенуза и катет прямоугольного треугольника. Найти второй катет и радиус вписанной окружности.")
    a=int(input("Введите катет: "))
    b=int(input("Введите гипотенузу: "))
    k=math.sqrt(b**2-a**2) #Нахождение второго катета
    print(k,"-второй катет") #Вывод катета
    print("Радиус вписанной окружности равен:",(0.5*a*k)/((a+b+k)/2)) # Нахождение гипотенузы

def two7():
    print("Известна длина окружности. Найти площадь круга, ограниченного этой окружностью.")
    a=int(input("Введите длину окружности: "))
    print(a**2/(4*math.pi)) #Вывод площади круга

def two8():
    print("Найти площадь кольца, внутренний радиус которого равен 20, а внешний – заданному числу R.")
    a=int(input("Введите внешний радиус круга: "))
    print("Площадь кольца равна:",math.pi*(a-20)) #Вывод площади кольца

def two9():
    print("Треугольник задан величинами своих углов и радиусом описанной окружности. Найти стороны треугольника.")
    a,b,c=int(input("Введите градусы угла:")),int(input("Введите градусы угла:")),int(input("Введите градусы угла:"))
    r=int(input())
    print("Первая сторона равна",(2*r)*math.sin(a)) #Первая сторона равна
    print("Первая сторона равна",(2*r)*math.sin(b)) #вторая сторона равна
    print("Первая сторона равна",(2*r)*math.sin(c)) #Третья сторона равна

def three1():
    print("Даны значения средней скорости и время движения автомобиля. Определите пройденный автомобилем путь за заданное время. ")
    sk=int(input("Введите скорость: "))
    time=int(input("Введить затраченное время: "))
    print("Автомобиль прошел",sk*time,"км") #Вывод пройденного пути


def three2():
    print("Даны значения V1, V2 и  S. Написать алгоритм для решения следующей задачи: скорость первого автомобиля V1 км/ч, второго – V2 км/ч, расстояние между ними S км. Какое расстояние будет между ними через T часов, если автомобили движутся в разные стороны? ")
    sk1=int(input("Введите скорость первого автомобиля: "))
    sk2=int(input("Введите скорость второго автомобиля: "))
    time=int(input("Введить затраченное время: "))
    rast=int(input("Введить расстояние между автомобилями: "))
    print((sk1*time)+(sk2*time)+rast,"-расстояние между автомобилями",sep="") #Расстояние между автомобилями


def three3():
    print("Даны значения V1, V2 и  S. Написать алгоритм для решения следующей задачи: скорость первого автомобиля V1 км/ч, второго – V2 км/ч, расстояние между ними S км. Какое расстояние будет между ними через T часов, если автомобили движутся навстречу друг другу? ")
    sk1=int(input("Введите скорость первого автомобиля: "))
    sk2=int(input("Введите скорость второго автомобиля: "))
    time=int(input("Введить затраченное время: "))
    rast=int(input("Введить расстояние между автомобилями: "))
    if rast-((sk1*time)+(sk2*time))>0: #Проверка
        print(rast-((sk1*time)+(sk2*time)),"-расстояние между автомобилями",sep="") #Вывод расстояния между автомобилями
    else: #Если проверка ложная
        print("Автомобили уже встретились")


def three4():
    print("Определите идеальный вес человека по его росту, при условии, что идеальный вес (кг)=рост(см)—100. ")
    a=int(input("Введите рост: "))
    print("Идеальный вес =", a-100) #Вывод идеального веса