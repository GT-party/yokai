def three():
    print("Определить, сколько 'трешек' и 'пятерок' требуется для уплаты суммы в N рублей (N>7)")
    a=int(input("Введите число: ")) #переменная для суммы
    b5=0
    b3=0
    d=0
    bet=0
    while a>bet: #цикл для нахождения суммы
        if a>bet and bet+5<=a : 
              bet+=5 #добавление 5 рублевки
              b5+=1 #добавление 1 монеты
        elif a>bet and bet+3<=a or a<bet+3:
             bet+=3 #добавление 3 рублевки
             b3+=1 #добавление 1 монеты
        else:
             bet-=3 #если перебор
    print(b5," пятерка",' и ',b3," тройка",sep="")


def chess():
     print(" а)  имеют ли два заданных поля один цвет?")
     x1=int(input("Введите столбик первого числа: "))
     y1=int(input("Введите ряд первого числа: "))
     x2=int(input("Введите столбик второго числа: "))
     y2=int(input("Введите ряд второго числа: "))
     app=""
     bet=""
     if x1%2==0: #Цикл нахождения столбца первого поля при четном ряде
          if y1%2==0: #Цикл нахождения ряда первого поля
             app="Черная"  #Присвоение значение 
          else:
               app="Белая" #Присвоение значение 
     else: #Если поле оказалось нечетное
          if y1%2==0: #
             app="Белая"  #Присвоение значение 
          else:
               app="Черная" #Присвоение значение 
     
     if x2%2==0: #Цикл нахождения столбца второго поля при четном ряде
          if y2%2==0:
             bet="Черная"  #Присвоение значение 
          else:
               bet="Белая" #Присвоение значение 
     else: #Если поле оказалось нечетное
          if y2%2==0:
             bet="Белая" #Присвоение значение 
          else:
               bet="Черная" #Присвоение значение 
     
     if app==bet: #Сравнивание значения
          print("Поля имеют одинаковый цвет: ",bet) #При поля одинаковые
     else: # если поля разные
          print("Поля имеют разные цвета: ",app,bet)

def ferz():
     print("б)  угрожает ли ферзь на первом поле второму?")
     x1=int(input("Введите столбик первого числа: "))
     y1=int(input("Введите ряд первого числа: "))
     x2=int(input("Введите столбик второго числа: "))
     y2=int(input("Введите ряд второго числа: "))
     
     if (x1 - y1 == x2 - y2) or (x1 + y1 == x2 + y2): #Вычисление по координатам диагонали
          print('Угрожает')
     elif x1==x2 or y1==y2: #При одинаковом ряде или столбце
          print("Угрожает")
     else: #При несовпадении остальных
          print("Неугрожает")

def kon():
     print(" в)  угрожает ли конь на первом поле второму?")
     x1=int(input("Введите столбик первого числа: "))
     y1=int(input("Введите ряд первого числа: "))
     x2=int(input("Введите столбик второго числа: "))
     y2=int(input("Введите ряд второго числа: "))
     if abs(x2-x1)==2 and abs(y1-y2)==1 or abs(x2-x1)==1 and abs(y1-y2)==2: #Вычисление опасных зон коня 
          print("Угрожает")
     else: #При безопасном положении
          print("Не угрожает")     

def lad():
     print("г)  минимальное число ходов и сами ходы, переводящие ладью с 1 поля на 2.")
     x1=int(input("Введите столбик первого числа: "))
     y1=int(input("Введите ряд первого числа: "))
     x2=int(input("Введите столбик второго числа: "))
     y2=int(input("Введите ряд второго числа: "))
     count=0
     if x1==x2 and y1==y2: #При одинаковых координатах
          print("Вы на месте")
     elif x1==x2: #При одинаковом столбце
          print("1 ход")
     elif y1==y2: #При одинаковом ряду
          print("1 ход")
     
     if x1!=x2: #при разных столюбцах
          count+=1 #+1 ход
          if y1!=y2: #При разных рядах
               count+=1 #+1 ход
     
     if count>0: #Вывод при кол-во ходов == 2
          print(count,"кол-во ходов")

def ferz2():
     print("д)  минимальное число ходов и сами ходы, переводящие ферзя с 1 поля на 2.")
     x1=int(input("Введите столбик первого числа: "))
     y1=int(input("Введите ряд первого числа: "))
     x2=int(input("Введите столбик второго числа: "))
     y2=int(input("Введите ряд второго числа: "))
     count=0
     if x1==x2 and y1==y2: #При одинаковых координатах
          print("Вы на месте")
     elif x1==x2: #При одинаковом столбце
          print("1 ход")
     elif y1==y2: #При одинаковом ряду
          print("1 ход")
     
     if x1!=x2: #при разных стобцах
          if (x1 - y1 == x2 - y2) or (x1 + y1 == x2 + y2): #Если можно дойти по диагонали
               print('1 ход')
          elif x1==x2 or y1==y2: #Если на одном ряду или столбце
               print("1 ход")
          else: #Если нужно 2 хода
               count+=1
               if y1!=y2:
                    count+=1
     
     if count>0:
          print(count,"кол-во ходов")

def slon():
     print("е)  минимальное число ходов и сами ходы, переводящие слона с 1 поля на 2.")
     x1=int(input("Введите столбик первого числа: "))
     y1=int(input("Введите ряд первого числа: "))
     x2=int(input("Введите столбик второго числа: "))
     y2=int(input("Введите ряд второго числа: "))
     count=0
     if (x1+y1)%2!=(x2+y2)%2: #Если находятся на плитках разного цвета
          print("Дойти не возможно.")
          return
     
     if  x1-y1==x2-y2: #Если находятся на одной диагонали и можно дойти за 1 ход
          count=1
     else: #Если находятся на одинаковых клетках, но нужно 2 хода 
          count=2
     print(count,"ходов")


def book():
     print("Миша и Боря зашли в книжный магазин и захотели купить по экземпляру понравившейся книжки. Мише не хватило 7 копеек, Боре не хватило 5 копеек.")
     unkm=7 #Нехватающее кол во монет для книги у Миши
     unkb=5 #Нехватающее кол во монет для книги у Бори
     x=0 #количество денег у миши
     y=0 #Количество денег у бори
     while x<1000:
          for i in range(50): #Цикл для нахождения денег у Миши
               x+=1
               for i in range(50): #Цикл для нахождения денег у Бори
                    y+=1
                    if x+7==x+y+2 and y+5==x+y+2: #При нахождении данных соответсвующих условию
                         print("У Миши было",x,",а у Бори было",y,", а книга стоит", x+y+2) #Вывод данных     
               y=0 
book()  
